// Validar vari√°veis de ambiente obrigat√≥rias em produ√ß√£o
const requiredEnvVars = {
  production: [
    'DATABASE_URL',
    'JWT_SECRET',
    'NEXT_PUBLIC_SITE_URL'
  ],
  development: []
};

const env = process.env.NODE_ENV || 'development';
const required = requiredEnvVars[env] || [];

console.log(`\nüîç Validando vari√°veis de ambiente (${env})...\n`);

let hasErrors = false;

required.forEach(varName => {
  const value = process.env[varName];

  if (!value) {
    console.error(`‚ùå ERRO: ${varName} n√£o est√° definida!`);
    hasErrors = true;
  } else if (varName === 'JWT_SECRET' && value.length < 32) {
    console.error(`‚ùå ERRO: JWT_SECRET muito curto (m√≠nimo 32 caracteres)`);
    hasErrors = true;
  } else {
    const preview = value.length > 20 ? value.substring(0, 20) + '...' : value;
    console.log(`‚úÖ ${varName}: ${preview}`);
  }
});

// Valida√ß√µes espec√≠ficas
if (process.env.JWT_SECRET === 'demo-secret-for-development-only-change-in-production') {
  console.error(`‚ùå ERRO: JWT_SECRET ainda est√° usando valor padr√£o de desenvolvimento!`);
  hasErrors = true;
}

if (env === 'production' && !process.env.DATABASE_URL?.includes('neon.tech')) {
  console.warn(`‚ö†Ô∏è  AVISO: DATABASE_URL n√£o parece ser do Neon`);
}

console.log('');

if (hasErrors) {
  console.error('‚ùå Valida√ß√£o FALHOU! Corrija os erros acima antes de continuar.\n');
  process.exit(1);
} else {
  console.log('‚úÖ Todas as vari√°veis de ambiente est√£o OK!\n');
  process.exit(0);
}
